{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"","tags":["tag1","tag2"]},{"location":"#i-am-jack-francis-a-member-of-team-302","title":"I am Jack Francis, a member of Team 302","text":"<p>Here you will find media showcasing the progress of my work on my individual subsystem for my team.</p>","tags":["tag1","tag2"]},{"location":"charts/","title":"Block Diagram","text":"<p>My block diagram showcasing the simplified individual components my subsystem uses, including a switching voltage regulator, wall mounted power supply, a microcontroller, a motor driver, and an actuator. The specifics will be provided within my component selection.</p>"},{"location":"second-page/","title":"Component Selection","text":""},{"location":"second-page/#this-page-will-discuss-the-details-of-the-components-that-my-system-uses","title":"This page will discuss the details of the components that my system uses.","text":""},{"location":"second-page/#actuator","title":"Actuator","text":"<p>An actuator will be used to add more visual interest to our exhibit. When an audience member gains a point, the actuator will extend, and when an audience member loses the point, the actuator will retract. When the actuator hits a pushbutton (also assigned to my subsystem) it will send a message to the display confirming that the audience member has won the game and the actuator will retract to its original position. Here are a few possible solutions.</p> Solution Pros Cons Solution 1 Micro Linear Actuator Increased length, More expensive, less dynamic force, less speed Solution 2 IP65 Micro Linear Actuator Cheaper, faster speed, greater force Less length (4 inches shorter than other solution) <p>Chosen Solution: IP65 Micro Linear Actuator</p> <p>Rationale: This is by far the cheapest and most efficient actuator for our project. Since the actuator does not require substantial force or reach, as it is part of a simple game mechanic, this cheap actuator can fit all the necessary purposes while fitting within the budget.</p>"},{"location":"second-page/#power-supply-wall-mount","title":"Power Supply (Wall Mount)","text":"Solution Pros Cons Solution 1 VEL12US120-US-JA Increased length, more power, sufficient aperage, greater efficiency More expensive Solution 2 L6R06H-120 Cheaper Less amperage, less heat tolerance, less power <p>Chosen Solution: VEL12US120-US-JA</p> <p>Rationale: Although not cheaper than the other option, it outweighs the other power supply in almost all stats in terms of performance. The amperage will be high for the microcontroller but can be easily regulated.</p>"},{"location":"second-page/#motor-driver","title":"Motor Driver","text":"Solution Pros Cons Solution 1 IFX9201SG Familiarity with technology, just enough pins, affordable Needs a 5V power source in order to function fully Solution 2 L2293QTR Lower supply threshold More pins than necessary, difficult to solder Solution 3 NCV7703CD2R2G Lower enough supply threshold to support 3.3V with a decent load range Less detailed datasheet compared to other solutions, less familiar technology <p>Chosen Solution: NCV7703CD2R2G</p> <p>Rationale: It has the simple pin layout of the IFX9201SG along with the ability to use 3.3V supply for logic exclusively, making it the best out of the other options for this project.</p>"},{"location":"second-page/#voltage-regulator","title":"Voltage Regulator","text":"Solution Pros Cons Solution 1 MIC29302WU Surface mount, increased amperage if necessary, higher voltage output, shorter manufacturer time, cheaper Lower voltage input, less familiar with technology Solution 2 LM2575T Familiar with technology, larger range of voltage outputs More expensive, through hole Solution 3 LM2575D2T Similar stats as above solution but surface mount, cheaper Fixed output <p>Chosen Solution: LM2575D2T</p> <p>Rationale: It has the LM2575 technology I am more familiar with as well as being surface mount, which is a requirement for this project. Although the output is fixed at 3.3V, this does not inhibit my system at all as 3.3V is enough to supply the logic of both my microcontroller and my motor driver.</p>"},{"location":"second-page/#microcontroller","title":"Microcontroller","text":"<p>The model used in my subsystem will be the ESP32-S3-WROOM-1_N4. This is the surface mount version of the microcontroller used in our labs.</p> ESP Info Answer Help Model ESP32-S3-WROOM-1 N4 Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL Product URL Found on Espressif.com ESP32-S3-WROOM-1-N4 Datasheet URL WROOM Datasheet Do not paste links directly into the table.  Use a link ESP32 S3 Datasheet URL ESP32 Datasheet Has more detail on functions ESP32 S3 Technical Reference Manual URL Technical Reference Manual Has details on I/O multiplexing, USB, and others Vendor link Digikey Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples Simple Wifi Server url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) Introduction Video Search on Google and YouTube for other resources for each specific microcontroller. Unit cost $2.95 Find on Digikey, Jameco, MPJA, or octopart Absolute Maximum Current for entire IC 355mA Find in the microcontroller datasheet Supply Voltage Range 3V~3.6V Min / Nominal / Max / Absolute Max, as found in datasheet Maximum GPIO current  (per pin) 97mA as found in datasheet Supports External Interrupts? Yes as found in datasheet Required Programming Hardware, Cost, URL VSCode Free as found in datasheet Module # Available Needed Associated Pins (or * for any) UART 2 2 TXD0, RXD0 I2C 2 0 * GPIO 33 2 * ADC 33 0 * LED PWM 33 0 * SPI 33 4 * USB Programmer 2 2 IO19-20 <p>* The ESP32-S2 has multiple SPI interfaces, but some are for internal use</p> <p>I have decided to go with the ESP32 WROOM as it is a surface mount microcontroller that provides all the necessary ports for my project, as it includes various PWM, SPI, UART, and GPIO pins, and transfers information at a high speed, making it ideal to use when communicating with the other subsystems my team has.</p> <p></p> <p>The EN and 3v3 will be connected, the GND pins will go to the necessary grounds, and the various GPIO pins will encompass PWMs, ADCs, UARTs, and SPIs and will be defined as their respective inputs/outputs.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"Schematic","text":"","tags":["tag1","tag2"]},{"location":"subfolder/#schematic","title":"Schematic","text":"","tags":["tag1","tag2"]},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}